#include "ASSWriter.h"
#include <fstream>
#include <optional>
#include <string>

struct FileWriteException : ASSWriterError {
    const std::string& path;
};


void ASSWriter::write() {
    std::ofstream out(this -> __path.data(), std::ios::binary);

    if (!out.is_open()) {
        throw FileWriteException("[severe error] Cannot write to target file: ",
                this -> __path.data());
        return ;
    }

    out << "[Script Info]" << "\r";
    out << "; Script generated by FFmpeg/Lavc59.18.100" << "\r";
    out << "ScriptType: v4.00+" << "\r";
    out << "PlayResX: 384" << "\r";
    out << "PlayResY: 288" << "\r";
    out << "ScaledBorderAndShadow: yes" << "\r" << "\r";
    out << "[V4+ Styles]" << "\r";
    out << "Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding" << "\r";
    out << "Style: Default,Helvetica,10,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0" << "\r" << "\r";
    out << "[Events]" << "\r";
    out << "Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text" << "\r";

    for(const auto& [layer, Time, style, name, marginL, marginR, marginV, effect, text] :
            this ->__ass_data ) {

        std::string temp = "Dialogue:" + std::to_string(layer) + ',' + Time + ',' + style + ',' + name.value_or("") + ',' + std::to_string(marginL) + ',' + std::to_string(marginR) + ',' + std::to_string(marginV) + ',' + effect.value_or("") + ',' + text;  

        out << temp << "\r";
    }

    std::cout << "\n\nDone!";
}



